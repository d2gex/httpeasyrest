[{"path":"https://d2gex.github.io/httpeasyrest/articles/getting_started.html","id":"get-all-booking-ids-as-a-dataframe","dir":"Articles","previous_headings":"","what":"Get all booking IDS as a DATAFRAME","title":"Getting started","text":"","code":"api_data <- booking_client$get_dataframe(end_point = \"booking\") head(api_data$http_resp) #>   bookingid #> 1        44 #> 2       163 #> 3       281 #> 4       273 #> 5        64 #> 6       101"},{"path":"https://d2gex.github.io/httpeasyrest/articles/getting_started.html","id":"get-all-bookings-ids-as-a-json-object","dir":"Articles","previous_headings":"","what":"Get all bookings IDS as a JSON object","title":"Getting started","text":"","code":"api_data <- booking_client$get_object(end_point = \"booking\") head(api_data$http_resp) #> [[1]] #> [[1]]$bookingid #> [1] 44 #>  #>  #> [[2]] #> [[2]]$bookingid #> [1] 163 #>  #>  #> [[3]] #> [[3]]$bookingid #> [1] 281 #>  #>  #> [[4]] #> [[4]]$bookingid #> [1] 273 #>  #>  #> [[5]] #> [[5]]$bookingid #> [1] 64 #>  #>  #> [[6]] #> [[6]]$bookingid #> [1] 101"},{"path":"https://d2gex.github.io/httpeasyrest/articles/getting_started.html","id":"get-single-specific-booking-record-as-json-object","dir":"Articles","previous_headings":"","what":"Get single specific booking record as JSON object","title":"Getting started","text":"Notice specific API maps id identifying record URL , rather query string","code":"booking_id <- api_data$http_resp[[1]]$bookingid api_data <- booking_client$get_object(end_point = paste0(\"booking/\", booking_id)) api_data$http_resp #> $firstname #> [1] \"Jane\" #>  #> $lastname #> [1] \"Doe\" #>  #> $totalprice #> [1] 111 #>  #> $depositpaid #> [1] TRUE #>  #> $bookingdates #> $bookingdates$checkin #> [1] \"2018-01-01\" #>  #> $bookingdates$checkout #> [1] \"2019-01-01\" #>  #>  #> $additionalneeds #> [1] \"Extra pillows please\""},{"path":"https://d2gex.github.io/httpeasyrest/articles/getting_started.html","id":"create-a-single-booking-object-afresh","dir":"Articles","previous_headings":"","what":"Create a single booking object afresh","title":"Getting started","text":"Let’s create unique name can confidently search afterwards ensuring unique, therefore fetching luck - recall API used many people. Let’s ensure object indeed sent API successfully.","code":"unique_name <- stringi::stri_rand_strings(1, 12) data <- list(   firstname = unique_name,   lastname = \"Jimenez\",   totalprice = 111,   depositpaid = TRUE,   bookingdates = list(     checkin = \"2018-01-01\",     checkout = \"2019-01-01\"   ),   additionalneeds = \"Breakfast\" ) api_data <- booking_client$post_object(end_point = \"booking\", data) testit::assert(isTRUE(api_data$success)) api_data$http_resp #> $bookingid #> [1] 457 #>  #> $booking #> $booking$firstname #> [1] \"5pb90SUHjlsA\" #>  #> $booking$lastname #> [1] \"Jimenez\" #>  #> $booking$totalprice #> [1] 111 #>  #> $booking$depositpaid #> [1] TRUE #>  #> $booking$bookingdates #> $booking$bookingdates$checkin #> [1] \"2018-01-01\" #>  #> $booking$bookingdates$checkout #> [1] \"2019-01-01\" #>  #>  #> $booking$additionalneeds #> [1] \"Breakfast\" end_point <- paste0(\"booking/\", api_data$http_resp$bookingid) inserted_booking <- booking_client$get_object(end_point = end_point) testit::assert(inserted_booking$http_resp$firstname == unique_name) inserted_booking$http_resp #> $firstname #> [1] \"5pb90SUHjlsA\" #>  #> $lastname #> [1] \"Jimenez\" #>  #> $totalprice #> [1] 111 #>  #> $depositpaid #> [1] TRUE #>  #> $bookingdates #> $bookingdates$checkin #> [1] \"2018-01-01\" #>  #> $bookingdates$checkout #> [1] \"2019-01-01\" #>  #>  #> $additionalneeds #> [1] \"Breakfast\""},{"path":"https://d2gex.github.io/httpeasyrest/articles/getting_started.html","id":"delete-a-single-booking-object","dir":"Articles","previous_headings":"","what":"Delete a single booking object","title":"Getting started","text":"Now want delete object just inserted. Unfortunately API allow deleting records, probably avoid clashes among multiple simultaneous users may calling API. APIs usually accomplish returning HTTP code = 403. can know HTTP codes https://cheatography.com/kstep/cheat-sheets/http-status-codes/. t::assert(isFALSE(deleted_booking$success)) ```","code":"end_point <- \"booking/\" ret <- booking_client$delete_object(end_point = end_point, field = api_data$http_resp$bookingid) testit::assert(ret$status_code == 403)"},{"path":"https://d2gex.github.io/httpeasyrest/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Dan G. Author, maintainer.","code":""},{"path":"https://d2gex.github.io/httpeasyrest/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"G D (2024). httpeasyrest: REST Api Queries. R package version 0.0.0.9000, https://d2gex.github.io/httpeasyrest/.","code":"@Manual{,   title = {httpeasyrest: REST Api Queries},   author = {Dan G},   year = {2024},   note = {R package version 0.0.0.9000},   url = {https://d2gex.github.io/httpeasyrest/}, }"},{"path":"https://d2gex.github.io/httpeasyrest/index.html","id":"httpeasyrest","dir":"","previous_headings":"","what":"REST Api Queries","title":"REST Api Queries","text":"tiny wrapper httr2 make API querying even easier","code":""},{"path":"https://d2gex.github.io/httpeasyrest/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"REST Api Queries","text":"R package can installed devtools follows:","code":"devtools::install_github(\"https://github.com/d2gex/httpeasyrest\", dep=TRUE)"},{"path":"https://d2gex.github.io/httpeasyrest/reference/HttpRestClient.html","id":null,"dir":"Reference","previous_headings":"","what":"HttpRestClient class — HttpRestClient","title":"HttpRestClient class — HttpRestClient","text":"Class providing simple atomic CRUD requests particular end_point","code":""},{"path":"https://d2gex.github.io/httpeasyrest/reference/HttpRestClient.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"HttpRestClient class — HttpRestClient","text":"list success flag, status code call response API JSON format. contain error message case error. list success flag, status code call response API dataframe format. case error contain error JSON format. list lists. element outer list contain successful failed response, object structure similar calls (success, status_code response JSON format). list success flag, status code call response API JSON format. contain error message case error. list success flag, status code call response API JSON format. contain error message case error.","code":""},{"path":"https://d2gex.github.io/httpeasyrest/reference/HttpRestClient.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"HttpRestClient class — HttpRestClient","text":"base_url string containing base url querying API (without end_point) part token string authenticate API headers list HTTP headers","code":""},{"path":[]},{"path":"https://d2gex.github.io/httpeasyrest/reference/HttpRestClient.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"HttpRestClient class — HttpRestClient","text":"HttpRestClient$new() HttpRestClient$get_object() HttpRestClient$get_dataframe() HttpRestClient$post_dataframe() HttpRestClient$post_object() HttpRestClient$delete_object() HttpRestClient$clone()","code":""},{"path":"https://d2gex.github.io/httpeasyrest/reference/HttpRestClient.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"HttpRestClient class — HttpRestClient","text":"Initialise HttpRestClient client","code":""},{"path":"https://d2gex.github.io/httpeasyrest/reference/HttpRestClient.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"HttpRestClient class — HttpRestClient","text":"","code":"HttpRestClient$new(base_url, headers, token)"},{"path":"https://d2gex.github.io/httpeasyrest/reference/HttpRestClient.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"HttpRestClient class — HttpRestClient","text":"base_url string containing base url querying API (without end_point) part headers list HTTP headers token string authenticate API","code":""},{"path":"https://d2gex.github.io/httpeasyrest/reference/HttpRestClient.html","id":"method-get-object-","dir":"Reference","previous_headings":"","what":"Method get_object()","title":"HttpRestClient class — HttpRestClient","text":"Gets data API return JSON format","code":""},{"path":"https://d2gex.github.io/httpeasyrest/reference/HttpRestClient.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"HttpRestClient class — HttpRestClient","text":"","code":"HttpRestClient$get_object(end_point, parameters = NULL)"},{"path":"https://d2gex.github.io/httpeasyrest/reference/HttpRestClient.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"HttpRestClient class — HttpRestClient","text":"end_point string containing relative part API URL parameters list parameters pass query string underlying GET method","code":""},{"path":"https://d2gex.github.io/httpeasyrest/reference/HttpRestClient.html","id":"method-get-dataframe-","dir":"Reference","previous_headings":"","what":"Method get_dataframe()","title":"HttpRestClient class — HttpRestClient","text":"Gets data API return dataframe format. expects one record per row rendered dataframe.","code":""},{"path":"https://d2gex.github.io/httpeasyrest/reference/HttpRestClient.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"HttpRestClient class — HttpRestClient","text":"","code":"HttpRestClient$get_dataframe(end_point, parameters = NULL)"},{"path":"https://d2gex.github.io/httpeasyrest/reference/HttpRestClient.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"HttpRestClient class — HttpRestClient","text":"end_point string containing relative part API URL parameters list parameters pass query string underlying GET method","code":""},{"path":"https://d2gex.github.io/httpeasyrest/reference/HttpRestClient.html","id":"method-post-dataframe-","dir":"Reference","previous_headings":"","what":"Method post_dataframe()","title":"HttpRestClient class — HttpRestClient","text":"Post every single row teh passed dataframe one--one fahsion API. expects row per record sent, therefore makes nrow() calls API. stop rows dataframe walked .","code":""},{"path":"https://d2gex.github.io/httpeasyrest/reference/HttpRestClient.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"HttpRestClient class — HttpRestClient","text":"","code":"HttpRestClient$post_dataframe(end_point, df)"},{"path":"https://d2gex.github.io/httpeasyrest/reference/HttpRestClient.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"HttpRestClient class — HttpRestClient","text":"end_point string containing relative part API URL df dataframe data sent API","code":""},{"path":"https://d2gex.github.io/httpeasyrest/reference/HttpRestClient.html","id":"method-post-object-","dir":"Reference","previous_headings":"","what":"Method post_object()","title":"HttpRestClient class — HttpRestClient","text":"Post data API. returned JSON may contain unique ID generated record registered.","code":""},{"path":"https://d2gex.github.io/httpeasyrest/reference/HttpRestClient.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"HttpRestClient class — HttpRestClient","text":"","code":"HttpRestClient$post_object(end_point, obj)"},{"path":"https://d2gex.github.io/httpeasyrest/reference/HttpRestClient.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"HttpRestClient class — HttpRestClient","text":"end_point string containing relative part API URL obj flat nested list convertable JSON object","code":""},{"path":"https://d2gex.github.io/httpeasyrest/reference/HttpRestClient.html","id":"method-delete-object-","dir":"Reference","previous_headings":"","what":"Method delete_object()","title":"HttpRestClient class — HttpRestClient","text":"Delete single record identified passed field unique.","code":""},{"path":"https://d2gex.github.io/httpeasyrest/reference/HttpRestClient.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"HttpRestClient class — HttpRestClient","text":"","code":"HttpRestClient$delete_object(end_point, field)"},{"path":"https://d2gex.github.io/httpeasyrest/reference/HttpRestClient.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"HttpRestClient class — HttpRestClient","text":"end_point string containing relative part API URL field flat nested list convertable JSON object","code":""},{"path":"https://d2gex.github.io/httpeasyrest/reference/HttpRestClient.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"HttpRestClient class — HttpRestClient","text":"objects class cloneable method.","code":""},{"path":"https://d2gex.github.io/httpeasyrest/reference/HttpRestClient.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"HttpRestClient class — HttpRestClient","text":"","code":"HttpRestClient$clone(deep = FALSE)"},{"path":"https://d2gex.github.io/httpeasyrest/reference/HttpRestClient.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"HttpRestClient class — HttpRestClient","text":"deep Whether make deep clone.","code":""},{"path":"https://d2gex.github.io/httpeasyrest/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://d2gex.github.io/httpeasyrest/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://d2gex.github.io/httpeasyrest/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://d2gex.github.io/httpeasyrest/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""}]
